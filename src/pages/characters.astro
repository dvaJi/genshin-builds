---
import GenshinData, { type Character } from "genshin-data";

import Layout from "../layouts/GenshinLayout.astro";
import ElementIcon from "@/components/genshin/ElementIcon.astro";

import { getCommon } from "@/lib/gi-content";
import { intl } from "@/lib/intl";
import CharacterAvatar from "@/components/genshin/CharacterAvatar.astro";
import { getUrlLQ } from "@/lib/img";
import { localeToLang } from "@/utils/locale-to-lang";

const locale = "en";
const giData = new GenshinData({ language: localeToLang(locale) });

const characters = await giData.characters({
  select: ["id", "name", "element"],
});
const elements: string[] = [];
const charactersByElement = characters.reduce<Record<string, Character[]>>(
  (map, value) => {
    if (map[value.element]) {
      map[value.element].push(value);
    } else {
      elements.push(value.element);
      map[value.element] = [value];
    }

    return map;
  },
  {}
);

const common = await getCommon(locale);
const { t } = await intl(locale, "genshin", "characters");
---

<Layout
  title={t({
    id: "title",
    defaultMessage: "Genshin Impact Characters List",
  })}
  description={t({
    id: "description",
    defaultMessage:
      "All the best characters and their builds ranked in order of power, viability, and versatility to clear content.",
  })}
  bgImage={getUrlLQ(`/regions/Inazuma_d.jpg`)}
  gradient={"linear-gradient(rgba(26,28,35,.8),rgb(26, 29, 39) 620px)"}
  locale={locale}
>
  <div>
    <h2 class="my-6 text-2xl font-semibold text-gray-200">
      {t({ id: "characters", defaultMessage: "Characters" })}
    </h2>
    <div class="">
      {
        elements.map((element) => (
          <div class="card">
            <div class="mb-2 flex self-center">
              <ElementIcon type={common[element]} height={32} width={32} />
              <h3 class="ml-2 text-2xl font-bold text-white">
                {t({ id: element.toLowerCase(), defaultMessage: element })}
              </h3>
            </div>

            <div class="flex flex-wrap items-center justify-center">
              {charactersByElement[element].map((character) => (
                <a
                  href={`/character/${character.id}`}
                  class="my-2 min-h-[120px]"
                >
                  <CharacterAvatar character={character} showElement={false} />
                </a>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</Layout>
